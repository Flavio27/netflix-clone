{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeatureMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","style","fontSize","onClick","previous","Math","round","window","innerWidth","next","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08c12c98.chunk.js","sourcesContent":["const API_KEY = 'c95d43f49a7551d8428a771f23346b54';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch (`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () =>{\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch (`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch (`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch (`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch (`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch (`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch (`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n            \r\n        ];\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if (movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                   info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n    \r\n}\r\n","import React, { useState } from 'react';\r\nimport './css/MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\n\r\n\r\nexport default ({ title, items }) => {\r\n    const [scrollX, setScrollX] = useState(0);\r\n\r\n    const handleLeftArrow = () => {\r\n        let previous = scrollX + Math.round(window.innerWidth / 2);\r\n        //Limit previous click\r\n        if (previous > 0){\r\n             previous = 0;\r\n        }\r\n        setScrollX(previous)\r\n    }\r\n\r\n    const handleRightArrow = () => {\r\n        let next = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n        //Limit next click\r\n        if ((window.innerWidth - listW) > next) {\r\n            next = (window.innerWidth - listW) - 60;\r\n        }\r\n        setScrollX(next)\r\n    }\r\n\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--left\">\r\n                <NavigateBeforeIcon style={{ fontSize: 50 }} onClick={handleLeftArrow} />\r\n            </div>\r\n            <div className=\"movieRow--right\">\r\n                <NavigateNextIcon style={{ fontSize: 50 }} onClick={handleRightArrow} />\r\n            </div>\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150\r\n\r\n                }}>\r\n                    {items.results.length > 0 && items.results.map((item, key) => (\r\n                        <div key={key} className=\"movieRow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                            \r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './css/FeatureMovie.css'\r\n\r\nexport default ({item}) =>{\r\n\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview;\r\n    if (description.length > 200){\r\n        description = description.substring(0, 220)+' ...'\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                     <div className=\"featured--name\">{item.original_name}</div>\r\n                     <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} Pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} Temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                     </div>\r\n                    <div className=\"featured--description\">{description}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a className=\"featured--playbutton\" href={`/watch/${item.id}`}>► Assistir</a>\r\n                        <a className=\"featured--listbutton\" href={`/list/add/${item.id}`}>+ Minha Lista</a>\r\n\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Gêneros: </strong>{genres.join(', ')}.</div>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\nimport './css/Header.css'\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://www.freepnglogos.com/uploads/netflix-logo-0.png\" alt=\"Netflix\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Usuário\" />\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeatureMovie from './components/FeatureMovie';\nimport Header from './components/Header';\nimport './App.css';\n\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n\n\n  // at load page\n  useEffect(() => {\n    const loadAll = async () => {\n\n      // pegando a lista TOTAL\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // pegando o Featured\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen]\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n\n    }\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      window.scrollY > 10 ? setBlackHeader(true) : setBlackHeader(false)\n    }\n\n    window.addEventListener('scroll', scrollListener)\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, [])\n\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackHeader} />\n\n      {featuredData &&\n        <FeatureMovie item={featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n\n        ))}\n      </section>\n\n      <footer>\n        © Flavio Rocha 2020 -  © 1997/2020 Netflix  -  © Themoviedb.org API\n      </footer>\n      {\n        movieList.length <= 0 &&\n        <div className=\"loading\">\n          <img src=\"https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/Netflix_LoadTime-scaled.gif\" alt=\"Carregando\" />\n        </div>\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}